@using SeasonOfGhosts.Core
<MudDialog>
    <TitleContent>
        Adjust
    </TitleContent>
    <DialogContent>
        <MudStack Justify="Justify.Center" AlignItems="AlignItems.Center">
            <MudNumericField Variant="Variant.Outlined" @bind-Value="@_amount"></MudNumericField>
            <MudSlider ValueLabel  Step="1" Min="@Min" Max="@Max" @bind-Value="@_amount"></MudSlider>
            <MudTextField Immediate @bind-Value="@_reason" MaxLength="50" Label="Reason"></MudTextField>    
        </MudStack>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" Color="Color.Warning" OnClick="Cancel">Cancel</MudButton>
        <MudButton Disabled="_reason.Length < 5" Variant="Variant.Filled" Color="Color.Success" OnClick="Submit">Save</MudButton>
    </DialogActions>
</MudDialog>

@code {
    private string _reason = "";
    private int _amount;
    
    [CascadingParameter]
    public required MudDialogInstance MudDialog { get; set; }

    [Parameter] public int Max { get; set; } = 10;
    [Parameter] public int Min { get; set; } = -10;

    private void Submit() => MudDialog.Close(DialogResult.Ok(new Adjustment(_amount, _reason)));

    private void Cancel() => MudDialog.Cancel();

    public static Task<IDialogReference> ShowAsync(IDialogService dialogService, int min = 10, int max = 10)
    {
        var parameters = new DialogParameters<AdjustSelect>()
        {
            { x => x.Max, max },
            { x => x.Min, min }
        };

        return dialogService.ShowAsync<AdjustSelect>("", parameters);
    }
}