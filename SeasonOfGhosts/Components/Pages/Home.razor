@page "/"
@using Microsoft.EntityFrameworkCore
@using SeasonOfGhosts.Core.Campaigns
@using SeasonOfGhosts.Core.Constants
@using SeasonOfGhosts.Components.Pages.Stats
@inject IJsApiService JsService
@inject ISnackbar Snackbar
@inherits UnitOfWorkComponentBase

@if (Campaign is not null)
{
    <PageTitle>@Campaign.Name</PageTitle>
    <MudStack>
        
    <MudCard Outlined>
        <MudCardHeader>
            <MudText Typo="Typo.h5">@Campaign.Name</MudText>
        </MudCardHeader>
        <MudCardContent>
            <MudText Inline Typo="Typo.subtitle1">Share Code: <MudButton OnClick="() => CopyToClipboard(Campaign.Code)" Variant="Variant.Text">@Campaign.Code</MudButton></MudText>
        </MudCardContent>
    </MudCard>
    
    <MudCard Outlined>
        <MudCardHeader>
            <MudText Typo="Typo.h5">Stats</MudText>
        </MudCardHeader>
        <MudCardContent>
            <MudGrid>
                @foreach (var stat in Campaign.Stats)
                {
                    <MudItem xs="12" md="6">
                        <StatRow Stat="@stat"></StatRow>
                    </MudItem>
                }
            </MudGrid>
        </MudCardContent>
    </MudCard>
    
    <MudCard Outlined>
        <MudCardContent>
            <MudGrid>
                <MudItem xs="6" md="4"><MudButton EndIcon="@AppRoutes.Characters" Href="@AppRoutes.Characters" FullWidth Variant="Variant.Outlined">Characters</MudButton></MudItem>
                <MudItem xs="6" md="4"><MudButton EndIcon="@AppRoutes.Stats" Href="@AppRoutes.Stats" FullWidth Variant="Variant.Outlined">Stats</MudButton></MudItem>
                <MudItem xs="6" md="4"><MudButton EndIcon="@AppRoutes.Factions" Href="@AppRoutes.Factions" FullWidth Variant="Variant.Outlined">Factions</MudButton></MudItem>
                <MudItem xs="6" md="4"><MudButton EndIcon="@AppRoutes.Settlements" Href="@AppRoutes.Settlements" FullWidth Variant="Variant.Outlined">Settlements</MudButton></MudItem>
            </MudGrid>
        </MudCardContent>
    </MudCard>
    </MudStack>
}

@code{

    [CascadingParameter]
    public required CampaignId CampaignId { get; set; }
    
    private Campaign? Campaign { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        Campaign = await Context
                .Campaigns
                .Where(x => x.Id == CampaignId)
                .Include(x => x.Stats.Take(4))
                .Include(x => x.Factions.Take(4))
                .Include(x => x.MainSettlement)
                .AsSplitQuery()
                .AsNoTrackingWithIdentityResolution()
                .FirstAsync();
    }

    private async Task CopyToClipboard(string content)
    {
        await JsService.CopyToClipboardAsync(content);
        Snackbar.Add("Copied!");
    }
}